{"version":3,"sources":["components/TodoListTasks/TodoListTask/TodoListTask.module.css","components/TodoListContainer/TodoListContainer.module.css","components/TodoListHeader/TodoListHeader.module.css","components/TodoListFooter/TodoListFooter.module.css","components/TodoListTasks/TodoListTasks.module.css","api/API.js","redux/todo-reducer.js","components/TodoListHeader/TodoListHeader.js","components/TodoListTasks/TodoListTask/TodoListTask.js","components/TodoListTasks/TodoListTasks.js","components/TodoListFooter/ButtonFilter.js","components/TodoListFooter/TodoListFooter.js","redux/selectors.js","components/TodoListContainer/TodoListContainer.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","todolistTask","todoListMainDiv","todoListHeader","todoListNewTaskForm","footerButton","status","todoListTasks","API","widgetId","axios","concat","taskTitle","title","taskId","done","statuses","SUCCESS","NONE","ERROR","REQUEST","initialState","tasks","filter","changeTask","state","action","propertyName","Object","objectSpread","map","t","id","defineProperty","changeStatus","type","TodoListHeader","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","render","react_default","a","createElement","className","style","value","ref","newTaskInputRef","maxLength","placeholder","onChange","onTitleChange","disabled","onClick","onAddTask","e","setState","currentTarget","length","addTask","alert","React","Component","TodoListTask","editMode","titleInputRef","createRef","onSaveClick","changeTitle","onEditClick","onTitleChanged","dataTask","checked","updateTaskStatus","autoFocus","buttonTask","deleteTask","TodoListTasks","_this$props","tasksElements","task","index","TodoListTasks_TodoListTask_TodoListTask","key","priority","ButtonFilter","styled","div","_templateObject","selected","TodoListFooter","selectedButton","filterTypes","onButtonFilterClick","filterType","changeFilter","buttons","_loop","i","push","TodoListFooter_ButtonFilter","src","alt","getFilteredTasks","todo","TodoListContainer","onTaskStatusChanged","isDone","onTaskTitleChanged","updateTaskTitle","onTaskDeleted","myTodoApp","components_TodoListHeader_TodoListHeader","components_TodoListTasks_TodoListTasks","components_TodoListFooter_TodoListFooter","fetchTasks","connect","dispatch","then","res","data","fetchTasksThunkCreator","updateTaskStatusThunkCreator","changeTaskTitle","updateTaskTitleThunkCreator","addTaskThunkCreator","deleteTaskThunkCreator","App","components_TodoListContainer_TodoListContainer","Boolean","window","location","hostname","match","reducers","combineReducers","arguments","undefined","toConsumableArray","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1c8cc6f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todolistTask\":\"TodoListTask_todolistTask__2jqKC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListMainDiv\":\"TodoListContainer_todoListMainDiv__1AbD3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListHeader\":\"TodoListHeader_todoListHeader__CnFnW\",\"todoListNewTaskForm\":\"TodoListHeader_todoListNewTaskForm__6jVnL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerButton\":\"TodoListFooter_footerButton__1jK27\",\"status\":\"TodoListFooter_status__O5o-w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoListTasks\":\"TodoListTasks_todoListTasks__3z6Hi\"};","import * as axios from \"axios\";\r\n\r\nexport const API = {\r\n    getTasks(widgetId) {\r\n        return axios.get(`https://repetitora.net/api/JS/Tasks?widgetId=${widgetId}`);\r\n    },\r\n    addTask(widgetId, taskTitle) {\r\n        return axios.post(`https://repetitora.net/api/JS/Tasks?widgetId=${widgetId}`,\r\n            {\r\n                title: taskTitle\r\n            });\r\n    },\r\n    updateTaskStatus(widgetId, taskId, done) {\r\n        return axios.put(`https://repetitora.net/api/JS/Tasks?widgetId=${widgetId}`,\r\n            {\r\n                taskId: taskId,\r\n                done: done\r\n            });\r\n    },\r\n    updateTaskTitle(widgetId, taskId, title) {\r\n        return axios.put(`https://repetitora.net/api/JS/Tasks?widgetId=${widgetId}`,\r\n            {\r\n                taskId: taskId,\r\n                title: title\r\n            });\r\n    },\r\n    deleteTask(widgetId, taskId) {\r\n        return axios.delete(`https://repetitora.net/api/JS/Tasks?widgetId=${widgetId}&taskId=${taskId}`);\r\n    }\r\n\r\n};","import {API} from \"../api/API\";\r\n\r\n\r\nconst SET_TASKS = 'SET_TASKS';\r\nconst ADD_TASK = 'ADD_TASK';\r\nconst DELETE_TASK = 'DELETE_TASK';\r\nconst CHANGE_TASK_STATUS = 'CHANGE_TASK_STATUS';\r\nconst CHANGE_TASK_TITLE = 'CHANGE_TASK_TITLE';\r\nconst CHANGE_TASK_DESCRIPTION = 'CHANGE_TASK_DESCRIPTION';\r\nconst CHANGE_STATUS = 'CHANGE_STATUS';\r\nconst CHANGE_FILTER = 'CHANGE_FILTER';\r\n\r\nexport const statuses = {\r\n    SUCCESS: \"success\",\r\n    NONE: \"none\",\r\n    ERROR: \"error\",\r\n    REQUEST: \"request\",\r\n};\r\n\r\nconst initialState = {\r\n    tasks: [],\r\n    status: statuses.NONE,\r\n    filter: 'All', \r\n};\r\n\r\nconst changeTask = (state, action, propertyName) => {\r\n    return {...state, tasks: state.tasks.map( t => {\r\n                if (t.id === action.id) {\r\n                    return {...t, [propertyName]: action[propertyName] };\r\n                }\r\n                return t;\r\n        }) }\r\n};\r\n\r\nexport const todoReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_TASKS: {\r\n            return {...state, tasks: action.tasks}\r\n        }\r\n        case CHANGE_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case ADD_TASK: {\r\n            return {...state, tasks: [...state.tasks, action.task]}\r\n        }\r\n        case DELETE_TASK: {\r\n            return {...state, tasks: state.tasks.filter(t => t.id !== action.taskId)}\r\n        }\r\n        case CHANGE_TASK_STATUS: {\r\n            return changeTask(state, action, \"done\");\r\n        }\r\n        case CHANGE_TASK_TITLE: {\r\n            return changeTask(state, action, \"title\");\r\n        }\r\n        case CHANGE_TASK_DESCRIPTION: {\r\n            return changeTask(state, action, \"description\");\r\n        }\r\n        case CHANGE_FILTER: { \r\n            return {...state, filter: action.value}\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport const setTasks = (tasks) => ({type: SET_TASKS, tasks});\r\nexport const changeStatus = (status) => ({type: CHANGE_STATUS, status});\r\nexport const addTask = (task) => ({type: ADD_TASK, task});\r\nexport const deleteTask = (taskId) => ({type: DELETE_TASK, taskId});\r\nexport const changeTaskStatus = (id, done) => ({type: CHANGE_TASK_STATUS, done, id});\r\nexport const changeTaskTitle = (id, title) => ({type: CHANGE_TASK_TITLE, title, id});\r\nexport const changeFilter = (value) => ({type:CHANGE_FILTER, value})\r\n\r\nexport const fetchTasksThunkCreator =  (widgetId) => {\r\n    return (dispatch) => {\r\n        dispatch(changeStatus(statuses.REQUEST));\r\n        API.getTasks(widgetId)\r\n            .then(res => {\r\n                dispatch(changeStatus(statuses.SUCCESS));\r\n                dispatch(setTasks(res.data));\r\n            });\r\n    };\r\n};\r\n\r\nexport const addTaskThunkCreator =  (widgetId, taskTitle) => {\r\n    return (dispatch) => {\r\n        dispatch(changeStatus(statuses.REQUEST));\r\n        API.addTask(widgetId, taskTitle)\r\n            .then(res => {\r\n                dispatch(changeStatus(statuses.SUCCESS));\r\n                dispatch(addTask(res.data.task));\r\n            });\r\n    };\r\n};\r\n\r\nexport const deleteTaskThunkCreator =  (widgetId, taskId) => {\r\n    return (dispatch) => {\r\n        dispatch(changeStatus(statuses.REQUEST));\r\n        API.deleteTask(widgetId, taskId)\r\n            .then(res => \r\n                dispatch(changeStatus(statuses.SUCCESS)),\r\n                dispatch(deleteTask(taskId)));\r\n    };\r\n};\r\n\r\nexport const updateTaskStatusThunkCreator =  (widgetId, taskId, isDone) => {\r\n    return (dispatch) => {\r\n        dispatch(changeStatus(statuses.REQUEST));\r\n        API.updateTaskStatus(widgetId, taskId, isDone)\r\n            .then(res => {\r\n                dispatch(changeStatus(statuses.SUCCESS));\r\n                 dispatch(changeTaskStatus(taskId, isDone))\r\n            });\r\n    };\r\n};\r\nexport const updateTaskTitleThunkCreator =  (widgetId, taskId, title) => {\r\n    return (dispatch) => {\r\n        dispatch(changeStatus(statuses.REQUEST));\r\n        API.updateTaskTitle(widgetId, taskId, title)\r\n            .then(res => {\r\n                dispatch(changeStatus(statuses.SUCCESS));\r\n                 dispatch(changeTaskTitle(taskId, title))\r\n            });\r\n    };\r\n};","import React from 'react';\nimport style from './TodoListHeader.module.css';\nimport { statuses } from \"../../redux/todo-reducer\";\n\nclass TodoListHeader extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { title: '' }\n        this.onTitleChange = (e) => {\n            this.setState({ title: e.currentTarget.value });\n        };\n        this.onAddTask = () => {\n            if (this.state.title.length > 0) {\n                this.props.addTask(this.state.title);\n                if (this.props.status === statuses.SUCCESS) {\n                    this.setState({ title: '' });\n                }\n            } else {\n                this.props.changeStatus('error')\n                alert('please enter note')\n            }\n        }\n\n    }\n    render = () => {\n        return (\n            <div className={style.todoListHeader}>\n                <h3>My tasks</h3>\n                <div className={style.todoListNewTaskForm}>\n                    <input type=\"text\"\n                        value={this.state.title}\n                        ref={this.newTaskInputRef}\n                        maxLength=\"20\"\n                        placeholder=\"New task name\"\n                        onChange={this.onTitleChange} />\n\n                    <button disabled={this.props.status === statuses.REQUEST} onClick={this.onAddTask}>Add</button>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TodoListHeader;\n\n","import React from 'react';\nimport style from './TodoListTask.module.css';\n\nclass TodoListTask extends React.Component {\n    state = {\n        editMode: false,\n        title: this.props.title\n    };\n\n    titleInputRef = React.createRef();\n\n    onSaveClick = () => {\n        this.setState({ editMode: false });\n        if (this.props.title !== this.state.title) {\n            this.props.changeTitle(this.props.taskId, this.state.title);\n        }\n    };\n\n    onEditClick = () => {\n        this.setState({ editMode: true });\n    };\n\n    onTitleChanged = (e) => {\n        this.setState({ title: e.currentTarget.value });\n    };\n\n    render = () => {\n\n        return (\n            <div className={style.todolistTask}>\n                <div className={style.dataTask}>\n                    <input type=\"checkbox\" checked={this.props.done}\n                        onChange={e => {\n                            this.props.updateTaskStatus(this.props.taskId, e.currentTarget.checked);\n                        }} />\n                    {this.state.editMode\n                        ? <input value={this.state.title} autoFocus={true}\n                            onChange={this.onTitleChanged}\n                            ref={this.titleInputRef} />\n                        : <span >{this.props.title}</span>}\n                </div>\n                <div className={style.buttonTask}>\n                    {this.state.editMode && <button onClick={this.onSaveClick}>save</button>}\n                    {!this.state.editMode && <button onClick={this.onEditClick}>edit</button>}\n                    <button onClick={() => { this.props.deleteTask(this.props.taskId) }}>x</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TodoListTask;\n\n","import React from 'react';\nimport style from './TodoListTasks.module.css';\nimport TodoListTask from \"./TodoListTask/TodoListTask\";\n\nclass TodoListTasks extends React.Component {\n    render = () => {\n        let {tasks, updateTaskStatus, deleteTask, changeTitle} = this.props;\n\n        let tasksElements = tasks.map( (task, index) => <TodoListTask key={index} title={task.title}\n                                                                        done={task.done}\n                                                                        priority={task.priority}\n                                                                        taskId={task.id}\n                                                             updateTaskStatus={updateTaskStatus}\n                                                             deleteTask={deleteTask}\n                                                             changeTitle={changeTitle}\n        />);\n\n        return (\n            <div className={style.todoListTasks}>\n                {tasksElements}\n            </div>\n        );\n    }\n}\n\nexport default TodoListTasks;\n\n","import styled from 'styled-components'\r\n\r\nlet ButtonFilter = styled.div`\r\n\r\nborder: solid 1px black;\r\npadding: 2px;\r\ntext-align: center;\r\nbackground-color:  ${props => props.selected ? 'green' : 'grey'}\r\ncolor:  ${props => props.selected ? 'white' : 'black'}\r\ncursor: ${props => props.selected ? 'default' : 'pointer'}\r\nwidth: 90px;\r\n\r\n&:hover{\r\n    background-color: ${props => props.selected ? 'green' : '#035603'}\r\n}\r\n\r\n`\r\n\r\n\r\nexport default ButtonFilter","import React from 'react';\nimport style from './TodoListFooter.module.css';\nimport ButtonFilter from './ButtonFilter';\nimport { statuses } from '../../redux/todo-reducer';\n\nclass TodoListFooter extends React.Component {\n\n    state={\n        selectedButton: '1',\n        filterTypes: ['All', 'Completed', 'Active'],\n    }\n\n    onButtonFilterClick = (filterType, e) => {\n        this.props.changeFilter(filterType)\n        this.setState({selectedButton : e.currentTarget.id})\n    }\n\n    render = () => {\n        let buttons =[];\n        for (let i = 1; i < 4; i++){\n            buttons.push( <ButtonFilter id={i} key={i}\n                selected = {i===this.state.selectedButton}\n                onClick={(e) => { this.onButtonFilterClick(this.state.filterTypes[i-1],e) }} > {this.state.filterTypes[i-1]} </ButtonFilter>)\n        }\n\n\n\n        return (<div>\n            <div className={style.footerButton}>\n                {buttons}\n            </div>\n            <div className={style.status}>\n                <span>Status: </span>\n\n        {this.props.status === statuses.REQUEST &&  <img src=\"https://loading.io/spinners/rolling/lg.curve-bars-loading-indicator.gif\" alt='request'></img> }\n        {this.props.status === statuses.SUCCESS &&  <img src=\"https://png.pngtree.com/svg/20170519/77b65bfe9d.png\" alt='success'></img> }\n        {this.props.status === statuses.ERROR &&  <img src=\"https://cdn2.iconfinder.com/data/icons/weby-flat-vol-1/512/1_warning-caution-exclamation-alert-attention-error-rounded-red-512.png\" alt='error' ></img> }\n        {this.props.status === statuses.NONE &&  <img src=\"https://png.pngtree.com/svg/20170728/8580e4d19d.png\" alt='none'></img> }      \n                      \n            </div>\n        </div>\n        );\n    }\n}\n\nexport default TodoListFooter;\n\n","export const getFilteredTasks = (state) =>{\r\n    switch (state.todo.filter) {\r\n        case 'All':{\r\n            return state.todo.tasks\r\n        }\r\n        case 'Completed':{\r\n            return state.todo.tasks.filter(t => t.done === true)\r\n        }\r\n        case 'Active':{\r\n            return state.todo.tasks.filter(t => t.done === false)\r\n        }\r\n\r\n        default:\r\n          return  state.todo.tasks;\r\n    }\r\n\r\n}","import React from 'react';\r\nimport style from './TodoListContainer.module.css'\r\nimport TodoListHeader from \"./../TodoListHeader/TodoListHeader\";\r\nimport TodoListTasks from \"./../TodoListTasks/TodoListTasks\";\r\nimport TodoListFooter from \"./../TodoListFooter/TodoListFooter\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    addTaskThunkCreator, deleteTaskThunkCreator,\r\n    fetchTasksThunkCreator,\r\n    updateTaskStatusThunkCreator, updateTaskTitleThunkCreator, changeFilter, changeStatus\r\n} from \"../../redux/todo-reducer\";\r\nimport { getFilteredTasks } from '../../redux/selectors';\r\n\r\nclass TodoListContainer extends React.Component {\r\n    widgetId = 1234;\r\n\r\n    componentDidMount() {\r\n        this.props.fetchTasks(this.widgetId);\r\n    }\r\n\r\n    addTask = (taskTitle) => {\r\n        this.props.addTask(this.widgetId, taskTitle);\r\n    };\r\n    onTaskStatusChanged = (taskId, isDone) => {\r\n        this.props.updateTaskStatus(this.widgetId, taskId, isDone)\r\n    };\r\n    onTaskTitleChanged = (taskId, title) => {\r\n        this.props.updateTaskTitle(this.widgetId, taskId, title)\r\n    };\r\n    onTaskDeleted = (taskId) => {\r\n        this.props.deleteTask(this.widgetId, taskId)\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <div className={style.myTodoApp}>\r\n                <div className={style.todoListMainDiv}>\r\n                    <TodoListHeader addTask={this.addTask} changeStatus={this.props.changeStatus} status={this.props.status}/>\r\n                    <TodoListTasks tasks={this.props.tasks} updateTaskStatus={this.onTaskStatusChanged} deleteTask={this.onTaskDeleted}\r\n                                   changeTitle={this.onTaskTitleChanged }/>\r\n                    <TodoListFooter changeFilter={this.props.changeFilter} status={this.props.status}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    tasks: getFilteredTasks(state),\r\n    status: state.todo.status\r\n});\r\n\r\nlet mapDispatchToProps = (dispatch) => ({\r\n    fetchTasks: (widgetId) => {\r\n        dispatch(fetchTasksThunkCreator(widgetId));\r\n    },\r\n    updateTaskStatus: (widgetId, taskId, isDone) => {\r\n        dispatch(updateTaskStatusThunkCreator(widgetId, taskId, isDone))\r\n    },\r\n    updateTaskTitle: (widgetId, taskId, title) => {\r\n        dispatch(updateTaskTitleThunkCreator(widgetId, taskId, title))\r\n    },\r\n    addTask: (widgetId, taskTitle) => {\r\n       dispatch(addTaskThunkCreator(widgetId, taskTitle))\r\n    },\r\n    deleteTask: (widgetId, taskId) => {\r\n        dispatch(deleteTaskThunkCreator(widgetId, taskId))\r\n    },\r\n    changeFilter: (value) =>{\r\n        dispatch(changeFilter(value))\r\n    },\r\n    changeStatus: (status) => {\r\n        dispatch(changeStatus(status))\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListContainer);\r\n\r\n","import React from 'react';\nimport './App.css';\nimport TodoListContainer from './components/TodoListContainer/TodoListContainer';\n\nclass App extends React.Component {\n    render () {\n        return (\n            <TodoListContainer/>\n        );\n    }\n}\n\n\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {todoReducer} from \"./todo-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nlet reducers = combineReducers({\r\n    todo: todoReducer\r\n});\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunkMiddleware));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}